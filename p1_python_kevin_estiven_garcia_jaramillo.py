# -*- coding: utf-8 -*-
"""P1_Python_Kevin_Estiven_Garcia_Jaramillo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ULxw3zprOh7_kYwDM6KG07gNAh9l8pHz

#**Practica_1**

## **A) Creación de Vectores:**
"""

import numpy as np
a=np.array([3.1,1,-0.5,-3.2,6])
b=np.array([1,3,2.2,5.1,1])
print("el vector a es:\n" +str(a));
print("\nel vector b es:\n" +str(b));

"""##**B) Producto Punto a.b**

"""

esc=np.dot(a,b)
print("el resultado de la multiplicación escalar es\n"+str(esc))

"""##**C) Multiplicación Punto a Punto de a.b: **

"""



"""## **F) Comandos de Numpy:**

**Numpy.ones (shape, dtype=None, order='C', *, device=None, like=None)**
- shape: forma del arreglo
- dtype: tipo de arreglo

"""

F1=np.ones((5,),dtype=int)
print(F1)

"""**numpy.round(a, decimals=0, out=None)**
- a: dato de entrada
- decimals: Número de decimales a las que se redondeará (valor predeterminado: 0). Si el número de decimales es negativo, especifica el número de posiciones a la izquierda del punto decimal.

"""

F2=np.round(115.3456,-2)
print(F2)
F3=np.round(115.3456,2)
print(F3)

"""**numpy.ceil(x):** busca el entero mas cercano por arriba es decir si el numero es 1.1, su valor seria el 2"""

ac=np.ceil(a)
print("Vector anterior: "+str(a))
print("Vector redondeado: "+str(ac))

"""**numpy.floor(x):** busca el entero mas cercano por abajo es decir si el numero es 1.1, su valor seria el 1"""

af=np.floor(a)
print("Vector anterior: "+str(a))
print("Vector redondeado: "+str(af))

"""##**Reto**"""

notas=[]
nombre=input("Ingrese el nombre del alumno: ")
numNotas=int(input("Ingrese el numero de notas: "))
for i in range(numNotas):
  nota=float(input("Ingrese la nota: "))
  notas.append(nota)
nots=np.array(notas)
estudiante={nombre:nots}
def notasCurso (estudiante):
  desviacion=estudiante[nombre].std()
  media=estudiante[nombre].mean()
  maximo=estudiante[nombre].max()
  return desviacion,media,maximo
print("desviación estandar: "+str(notasCurso(estudiante)[0]))
print("media: "+str(notasCurso(estudiante)[1]))
print("maximo: "+str(notasCurso(estudiante)[2]))